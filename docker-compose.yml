# version: '3.8'

# services:
#   # MongoDB service
#   # mongo:
#   #   image: mongo:latest
#   #   container_name: mongo_db
#   #   restart: always
#   #   environment:
#   #     MONGO_INITDB_ROOT_USERNAME: root
#   #     MONGO_INITDB_ROOT_PASSWORD: example
#   #   volumes:
#   #     - mongo_data:/data/db
#   #   ports:
#   #     - "27017:27017"
    
#   # Application service (e.g., Node.js app)
#   backend:
#     build:
#       context: ./backend  # Path to the app directory
#       dockerfile: Dockerfile  # Optional if Dockerfile is named 'Dockerfile'
#     # image: devopsflow69/backend_wrkout:v1.0.0
#     container_name: backend
#     restart: always
#     # environment:
#     #   MONGO_URI: "mongodb://root:example@mongo:27017"
#     #   PORT: "4000"
#     #   SECRET: "ninjadojoshifuyoshimarioluigipeachbowser"
#     # depends_on:
#     #   - mongo
#       #  NODE_ENV: "production"
#     ports:
#       - "6000:6000"

#   frontend:
#     build:
#       context: ./frontend  # Path to the app directory
#       dockerfile: Dockerfile  # Optional if Dockerfile is named 'Dockerfile'
#     # image: devopsflow69/frontend_wrkout:v1.0.0
#     container_name: frontend
#     restart: always
#     # environment:
#         # REACT_APP_API_URL: "http://backend:6000/api"
#       # MONGO_URI: "mongodb://root:example@mongo:27017"
#       # PORT: "4000"
#       # SECRET: "ninjadojoshifuyoshimarioluigipeachbowser"
#       # NODE_ENV: production
#     depends_on:
#       - backend
#     ports:
#       - "3000:3000"

# ## Need nginx Load balancer 
#  ##Nginx Load Balancer Service
#   # nginx:
#   #   image: nginx:latest
#   #   container_name: nginx_lb
#   #   restart: always
#   #   depends_on:
#   #     - frontend
#   #     - backend
#   #   volumes:
#   #     - ./nginx.conf:/etc/nginx/nginx.conf  # Mount your custom Nginx configuration file
#   #   ports:
#   #     - "8800:80"  # Expose Nginx on port 80

# # volumes:
# #   mongo_data:
# #     driver: local
    
# networks:
#   app-network:
#     driver: bridge


version: "3.8"

services:
  frontend:
    build:
      context: ./frontend # The path to your frontend project (where Dockerfile is located)
    ports:
      - "80:80" # Expose the frontend on port 80 (you can change it)
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend 
    # image: your-backend-image:latest # Replace this with your actual backend image or use a build context
    container_name: backend
    ports:
      - "6000:6000" # Expose the backend on port 6000 (you can change this)
    networks:
      - app-network
    environment:
      - NODE_ENV=production
    # Add more environment variables or configurations if needed

networks:
  app-network:
    driver: bridge
